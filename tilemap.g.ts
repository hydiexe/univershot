// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . 2 . . . . . . . . 2 . 2 
2 . 2 . 2 . 2 2 2 2 2 2 . 2 . 2 
2 . 2 . 2 . . . . . . 2 . 2 . 2 
2 . 2 . 2 . . . . . . 2 . 2 . 2 
2 . 2 . 2 . . . . . . 2 . 2 . 2 
2 . 2 . 2 . . . . . . 2 . 2 . 2 
2 . 2 . 2 . . . . . . 2 . 2 . 2 
2 . 2 . 2 . . . . . . 2 . 2 . 2 
2 . 2 . 2 2 2 2 2 2 2 2 . 2 . 2 
2 . 2 . . . . . . . . . . 2 . 2 
2 . 2 2 2 2 2 2 2 2 2 2 2 2 . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.brick,sprites.dungeon.collectibleInsignia,sprites.dungeon.chestOpen,sprites.dungeon.chestClosed,sprites.castle.rock1], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 . 2 . . . 2 2 2 2 . . . 2 . 2 
2 . . 2 . . . . . . . . 2 . . 2 
2 . . . 2 . . . . . . 2 . . . 2 
2 . . . . 2 2 . . 2 2 . . . . 2 
2 2 . . 2 2 . . . . 2 2 . . 2 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 . . 2 2 . . . . 2 2 . . 2 2 
2 . . . . 2 2 . . 2 2 . . . . 2 
2 . . . 2 . . . . . . 2 . . . 2 
2 . . 2 . . . . . . . . 2 . . 2 
2 . 2 . . . 2 2 2 2 . . . 2 . 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.darkGroundCenter,sprites.dungeon.collectibleInsignia,sprites.dungeon.chestOpen,sprites.dungeon.chestClosed,sprites.castle.rock1], TileScale.Sixteen);
            case "level":
            case "level1":return tiles.createTilemap(hex`1000100001010101010101010101010101010101010500010000000101000003010000010100000100000000000000000100000101000001000001000001000001000001010000010000010000010000010000010100000102010000000001000100000101000001010000000000000101000001010000000000000000000000000000010100000000000000000000000000000101000001010000000000000101000001010000010001000000000100010000010100000100000100000100000100000101000001000001000001000001000001010000010000000000000000010000010100000104000001010000000100060101010101010101010101010101010101`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . 2 . . . 2 2 . . . 2 . . 2 
2 . . 2 . . . . . . . . 2 . . 2 
2 . . 2 . . 2 . . 2 . . 2 . . 2 
2 . . 2 . . 2 . . 2 . . 2 . . 2 
2 . . 2 2 2 . . . . 2 . 2 . . 2 
2 . . 2 2 . . . . . . 2 2 . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . 2 2 . . . . . . 2 2 . . 2 
2 . . 2 . 2 . . . . 2 . 2 . . 2 
2 . . 2 . . 2 . . 2 . . 2 . . 2 
2 . . 2 . . 2 . . 2 . . 2 . . 2 
2 . . 2 . . . . . . . . 2 . . 2 
2 . . 2 . . . 2 2 . . . 2 . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.dungeon.collectibleRedCrystal,sprites.dungeon.collectibleInsignia,sprites.dungeon.chestOpen,sprites.dungeon.chestClosed,sprites.castle.rock1], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
